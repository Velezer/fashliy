openapi: 3.0.2

info: 
  title: Fashliy API
  version: 1.0.0
  contact:
    name: Velezer
    url: https://github.com/Velezer

externalDocs:
  description: Repository Link
  url: https://github.com/Velezer/fashliy

servers:
  - url: https://fashliy.herokuapp.com/


components:
  securitySchemes:
    jwt_token:
      type: http
      scheme: 'Bearer'
  schemas:

    loginSuccess:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
          properties:
            token:
              type: string


    basicMessage:
      type: object
      properties:
        message:
          type: string

    validationError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              msg:
                type: string
              param:
                type: string
              location:
                type: string
        

paths:
  /:
    get:
      summary: check if server is up
      description: use this endpoint to check if server is up and running
      tags:
        - home
      responses:
        200:
          description: OK


  /api/users:
    get:
      summary: get all consultants
      description: get all consultants
      tags:
        - users
      security:
        - jwt_token: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllConsultants'
              example:
                message: success
                data: 
                  - _id: 6173d2e7365b7f5cefd2017d,
                    name: secretConsultant,
                    role: consultant,
                    gender: female,
                    __v: 0
    delete:
      summary: delete consultant
      description: delete based on jwt_token
      tags:
        - consultants
      security:
        - jwt_token: []
      responses:
        200:
          description: deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
                  
  
  /api/consultants/login:
    post:
      summary: login as a consultants
      description: for getting jwt token
      tags:
        - consultants
      requestBody:
        required: true
        description: consultant data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consultantLogin'
            example:
              name: name
              password: password
                
      responses:
        200:
          description: login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consultantLogin'

        400:
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validationError'
                
  /api/consultants/register:
    post:
      summary: register as a consultants
      description: register as a consultants
      tags:
        - consultants
      requestBody:
        required: true
        description: consultant data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consultantRegister'
            example:
              name: name
              password: password
              role: consultant
              gender: male
                
      responses:
        201:
          description: consultant created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
        409:
          description: consultant already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
        400:
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validationError'

